<Application x:Class="WpfApp2.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfApp2"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!-- mini butonlar-->
        <Style x:Key="minibutonlar" TargetType="Button">
            <Setter Property="Foreground" Value="#FF787878"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                                BorderThickness="0,0,0,0"
                                BorderBrush=" #FF8F8F8F"
                                Background="White">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                                <Setter TargetName="border" Property="Background" Value="#FF0F2E80"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Hamburger Butonlar-->
        <Style x:Key="hamburgerbutonlar" TargetType="Image">
            <Setter Property="Opacity" Value="0.7"/>
            <Setter Property="Width" Value="16"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Opacity" Value="1"/>
                    <Setter Property="Width" Value="20"/>
                </Trigger>
            </Style.Triggers>
        </Style>

            <!-- menu butonları-->
        <Style x:Key="menubutonlar" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#FF787878"/>
            <Setter Property="Margin" Value="0,0,0,1"/> 

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Name="border"
                                BorderThickness="5,0,0,0"
                                BorderBrush="{x:Null}"
                                Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#2B5493"/>
                                <Setter TargetName="border" Property="Background" Value="#2B5493"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="5,0,0,0"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="white"/>
                                <Setter TargetName="border" Property="Background" Value="#2B5493"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="5,0,0,0"/>
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- uc  butonları-->
        <Style x:Key="userKontrolKitapEkleButon" TargetType="Button">
            <Setter Property="Foreground" Value="#FF3691D1"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="Margin" Value="0,0,15,0"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="25"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                                BorderThickness="1,1,1,1"
                                BorderBrush="#FF3691D1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF3691D1"/>
                                <Setter TargetName="border" Property="Background" Value="#CC3691D1"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,1"/>
                                <Setter Property="Foreground" Value="#FF3691D1"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- TextBoxlar-->
        <Style x:Key="MoseOverImageChange_TextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="#FF032D6C"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFEFF4FD"/>
                    <Setter Property="BorderBrush" Value="#FF2F5DAC"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--Combobox Style-->
        <!-- Flat ComboBox -->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="White"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="#134187" Margin="0, 1, 0, 0"
                        CornerRadius="0,0,10,10 " BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of Flat ComboBox -->

        <!--Daire Buton-->
        <Style x:Key="daireButon" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="ButonDaire" Width="41" Height="41" Fill="#3E75C7"/>
                            <Label x:Name="ButonDaireLabel" Content="+" Foreground="White" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButonDaire" Property="Width" Value="45"/>
                                <Setter TargetName="ButonDaire" Property="Height" Value="45"/>
                                <Setter TargetName="ButonDaire" Property="Fill" Value="#75A5F1"/>
                                <Setter TargetName="ButonDaireLabel" Property="FontSize" Value="9"/>
                                <Setter TargetName="ButonDaireLabel" Property="Content" Value="Resim&#xa; Ekle"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Daire Buton İptal-->
        <Style x:Key="daireButonIptal" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="ButonDaire" Width="Auto" Height="Auto" Stroke="White"/>
                            <Image Source="Image/Icon/exit.png" Width="33" Height="auto" ToolTip="Kapat!"/>
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButonDaire" Property="Width" Value="Auto"/>
                                <Setter TargetName="ButonDaire" Property="Height" Value="Auto"/>
                                <Setter TargetName="ButonDaire" Property="Fill" Value="#FF530707"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Daire Buton Bilgi-->
        <Style x:Key="daireButonBilgi" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="ButonDaire" Width="Auto" Height="Auto" Stroke="White"/>
                            <Image Source="Image/Icon/info.png" Width="33" Height="auto" ToolTip="Bilgi Al"/>
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButonDaire" Property="Width" Value="Auto"/>
                                <Setter TargetName="ButonDaire" Property="Height" Value="Auto"/>
                                <Setter TargetName="ButonDaire" Property="Fill" Value="#FF2965C1"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Dönme Efekti-->
        <Style x:Key="don_dunya" TargetType="Ellipse">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Ellipse.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:10" RepeatBehavior="Forever"/>   
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>    
            </Style.Triggers>
        </Style>
        
        <!--Blink Efekti-->
        <Style x:Key="Labelyanipson" TargetType="Label">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Label.Loaded">
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Opacity" RepeatBehavior="Forever">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- DataGrid Style-->
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">

            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
            <Setter Property="CellStyle" Value="{DynamicResource ColumnrowStyle}"/>
            
        </Style>
        
        <!-- DataGridColumnHeader-->
        <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">

            <Setter Property="Height" Value="37"/>
            <Setter Property="Background" Value="#FF134187"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="BorderBrush" Value="#FF134187"/>
            <Setter Property="BorderThickness" Value="4,0,0,0"/>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="ToolTip" Value="Tıkla ve Grupla"/>

                </Trigger>
                
            </Style.Triggers>
            
        </Style>

        <Style x:Key="ColumnrowStyle" TargetType="DataGridCell">

            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="#EEEEEE"/>
            <Setter Property="BorderThickness" Value="4,0,0,0"/>
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="Foreground" Value="#FF042263"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="12"/>

            <Style.Triggers>

                <Trigger Property="IsSelected" Value="True">

                    <Setter Property="Background" Value="#3168BC"/>
                    <Setter Property="BorderBrush" Value="#FF042263"/>
                    <Setter Property="Foreground" Value="white"/>

                </Trigger>
                
            </Style.Triggers>

        </Style>
        
        
    </Application.Resources>
</Application>
